Index: src/BlackJack.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.ArrayList;\n\npublic class BlackJack {\n\n    private Deck deck;\n    Hand playerHand;\n    Hand dealerHand;\n\n    // As score is dynamic where the value of Ace varies, we don't keep track of the score.\n    // Instead, whenever we want to know that score, we compute it with a given hand\n\n    private static final int WINNING_SCORE = 21;\n    private static final int DEALER_MAX = 17;\n\n    public BlackJack() {\n        deck = new Deck();\n        playerHand = new Hand();\n        dealerHand = new Hand();\n    }\n\n    public Card playerHit() {\n        Card newCard = deck.removeCard();\n        if (newCard != null) {\n            playerHand.addCard(newCard);\n        }\n        return newCard;\n    }\n\n    public Card dealerHit() {\n        Card newCard = deck.removeCard();\n        if (newCard != null) {\n            dealerHand.addCard(newCard);\n        }\n        return newCard;\n    }\n\n    public static int countScoreOfHand(ArrayList<Card> hand) {\n        int score = 0;\n        int countOfAce = 0;\n        for (int i = 0; i < hand.size(); i++) {\n            score += convertCardToValue(hand.get(i));\n            if (hand.get(i).getName() == 1) {\n                countOfAce += 1;\n            }\n        }\n        while (isBusted(score) && countOfAce > 0) {\n            score -= 10;\n            countOfAce -= 1;\n        }\n        return score;\n    }\n\n    private static int convertCardToValue(Card c) {\n        int literalValue = c.getName();\n        if (literalValue == 1) {\n            // will be adjusted in the countScoreOfHand method\n            return 11;\n        } else if (literalValue > 10) {\n            return 10;\n        } else {\n            return literalValue;\n        }\n    }\n\n    private void initializeGame() {\n        //shuffle cards\n        deck.shuffleCard();\n        // two cards for player\n        Card p1 = playerHit();\n        Card p2 = playerHit();\n        System.out.println();\n        InAndOut.displayPlayerCard(p1);\n        InAndOut.displayPlayerCard(p2);\n        InAndOut.displayPlayerScore(this);\n        System.out.println();\n        //two cards for dealer\n        Card d1 = dealerHit();\n        InAndOut.displayDealerCard(d1);\n        // not displaying the second card\n        System.out.println(\"Second card of dealer is hidden.\");\n        InAndOut.displayDealerScore(this);\n        Card d2 = dealerHit();\n    }\n\n    private static boolean isBusted(int score) {\n        if (score > WINNING_SCORE) return true;\n        return false;\n    }\n\n    public static void main(String[] args) {\n        BlackJack game = new BlackJack();\n        game.initializeGame();\n\n        // player's turn\n        boolean playerStand = false;\n        while (!playerStand) {\n            int hitOrStand = InAndOut.getInput();\n            // use while loop to get valid input\n            while (hitOrStand < 0) {\n                hitOrStand = InAndOut.getInput();\n            }\n            if (hitOrStand == 1) {\n                Card newCard = game.playerHit();\n                InAndOut.displayPlayerCard(newCard);\n                InAndOut.displayPlayerScore(game);\n            } else {\n                playerStand = true;\n                System.out.println(\"Player chose to stand\");\n            }\n            // check if the player has busted\n            if (isBusted(countScoreOfHand(game.playerHand.hand))) {\n                System.out.println(\"\\n*** Player busted! Dealer won! Game over! ***\");\n                break;\n            }\n        }\n\n\n        // dealer's turn if player did not get busted\n        if (!isBusted(countScoreOfHand(game.playerHand.hand))) {\n            System.out.println(\"\\n*** Dealer's turn now ***\");\n            Card hidden = game.dealerHand.hand.get(1);\n            System.out.println(\"The hidden card of dealer is : \" + hidden.getNameAsStr() + \" of \" + hidden.getSuitAsStr());\n            InAndOut.displayDealerScore(game);\n\n            while (countScoreOfHand(game.dealerHand.hand) < DEALER_MAX) {\n                Card newCard = game.dealerHit();\n                InAndOut.displayDealerCard(newCard);\n                InAndOut.displayDealerScore(game);\n            }\n            // check if the dealer has busted\n            if (isBusted(countScoreOfHand(game.dealerHand.hand))) {\n                System.out.println();\n                InAndOut.displayPlayerScore(game);\n                InAndOut.displayDealerScore(game);\n                System.out.println(\"\\n*** Dealer busted! Player won! Game over! ***\");\n            } else {\n                System.out.println(\"\\nDealer chose to stand\\n\");\n                // Compare the score\n                System.out.println(\"*** Final Score ***\");\n                int scoreOfPlayer = countScoreOfHand(game.playerHand.hand);\n                int scoreOfDealer = countScoreOfHand(game.dealerHand.hand);\n                InAndOut.displayPlayerScore(game);\n                InAndOut.displayDealerScore(game);\n\n                if (scoreOfDealer == scoreOfPlayer) {\n                    System.out.println(\"\\nIt's a tie! Game over!\");\n                } else if (scoreOfDealer < scoreOfPlayer) {\n                    System.out.println(\"\\nPlayer won! Game over!\");\n                } else {\n                    System.out.println(\"\\nDealer won! Game over!\");\n                }\n            }\n        }\n\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/BlackJack.java b/src/BlackJack.java
--- a/src/BlackJack.java	(revision e1c84e8b9816c419e0638dc0ea4fab99f789c74e)
+++ b/src/BlackJack.java	(date 1616616988525)
@@ -154,4 +154,4 @@
 
 
     }
-}
+}
\ No newline at end of file
